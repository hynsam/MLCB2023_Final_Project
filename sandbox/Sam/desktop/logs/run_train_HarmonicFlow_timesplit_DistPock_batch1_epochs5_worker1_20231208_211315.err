/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/torch/overrides.py:110: UserWarning: 'has_cuda' is deprecated, please use 'torch.backends.cuda.is_built()'
  torch.has_cuda,
/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/torch/overrides.py:111: UserWarning: 'has_cudnn' is deprecated, please use 'torch.backends.cudnn.is_available()'
  torch.has_cudnn,
/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/torch/overrides.py:117: UserWarning: 'has_mps' is deprecated, please use 'torch.backends.mps.is_built()'
  torch.has_mps,
/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/torch/overrides.py:118: UserWarning: 'has_mkldnn' is deprecated, please use 'torch.backends.mkldnn.is_available()'
  torch.has_mkldnn,
/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/torch/jit/_check.py:178: UserWarning: The TorchScript type system doesn't support instance-level annotations on empty non-base types in `__init__`. Instead, either 1) use a type annotation in the class body, or 2) wrap the type in `torch.jit.Attribute`.
  warnings.warn(
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
wandb: Currently logged in as: hynsam137. Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.16.1
wandb: Run data is saved locally in ./wandb/run-20231208_211319-nr6491gy
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run train_HarmonicFlow_timesplit_DistPock_batch1_epochs5_worker1_20231208_211315
wandb:  View project at https://wandb.ai/hynsam137/pocket_gen
wandb:  View run at https://wandb.ai/hynsam137/pocket_gen/runs/nr6491gy
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name  | Type          | Params
----------------------------------------
0 | model | FlowSiteModel | 5.6 M 
----------------------------------------
5.6 M     Trainable params
0         Non-trainable params
5.6 M     Total params
22.599    Total estimated model params size (MB)
/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:136: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
Epoch 0, global step 200: 'val_rmsd<2' reached 0.00000 (best 0.00000), saving model to './pocket_gen/nr6491gy/checkpoints/best.ckpt' as top 1
wandb: WARNING Step only supports monotonically increasing values, use define_metric to set a custom x axis. For details see: https://wandb.me/define-metric
wandb: WARNING (User provided step: 200 is less than current step: 201. Dropping entry: {'trainer/global_step': 200.0, 'epoch': 0.0, 'fake_lig_ratio': 0.0, 'train_num_res': 98.765, 'train_batch_idx': 99.5, 'train_num_ligs': 1.0, 'train_num_designable': 14.65, 'train_lig_size': 33.775, 'train_rec_sigma': 7.496160984039307, 'train_norm_t': 0.350361704826355, 'train_t': 0.5127392411231995, 'train_sigma': 7.496160984039307, 'train_aux_loss': 4.235018253326416, 'train_pos_loss': 4.314385414123535, 'train_angle_loss': 0.0, 'train_loss': 2.1571927070617676, 'train_lowT_pos_loss': 8.442342758178711, 'train_lowT_aux_loss': 8.380485534667969, 'train_lowT_loss': 4.2211713790893555, 'train_lowT_t': 0.15372295677661896, 'train_metric_calculation_time': 0.0043999278545379635, 'train_general_step_time': 0.1395518708229065, 'train_radius_graph_time': 0.012643953164418539, 'invalid_grads_per_epoch': 0.0, '_timestamp': 1702088217.3102572}).
Epoch 1, global step 400: 'val_rmsd<2' was not in top 1
wandb: WARNING (User provided step: 400 is less than current step: 401. Dropping entry: {'trainer/global_step': 400.0, 'epoch': 1.0, 'fake_lig_ratio': 0.0, 'train_num_res': 100.265, 'train_batch_idx': 99.5, 'train_num_ligs': 1.0, 'train_num_designable': 14.9, 'train_lig_size': 32.225, 'train_rec_sigma': 7.573199272155762, 'train_norm_t': 0.3489323556423187, 'train_t': 0.5104811191558838, 'train_sigma': 7.573199272155762, 'train_aux_loss': 3.6895835399627686, 'train_pos_loss': 3.7612645626068115, 'train_angle_loss': 0.0, 'train_loss': 1.8806322813034058, 'train_lowT_pos_loss': 7.383270263671875, 'train_lowT_aux_loss': 7.282212257385254, 'train_lowT_loss': 3.6916351318359375, 'train_lowT_t': 0.1594621241092682, 'train_metric_calculation_time': 0.004280488491058349, 'train_general_step_time': 0.10334285616874694, 'train_radius_graph_time': 0.013022286551339286, 'invalid_grads_per_epoch': 0.0, '_timestamp': 1702088426.1761434}).
Epoch 2, global step 600: 'val_rmsd<2' reached 0.00500 (best 0.00500), saving model to './pocket_gen/nr6491gy/checkpoints/best.ckpt' as top 1
wandb: WARNING (User provided step: 600 is less than current step: 601. Dropping entry: {'trainer/global_step': 600.0, 'epoch': 2.0, 'fake_lig_ratio': 0.0, 'train_num_res': 98.025, 'train_batch_idx': 99.5, 'train_num_ligs': 1.0, 'train_num_designable': 14.98, 'train_lig_size': 32.085, 'train_rec_sigma': 7.480144023895264, 'train_norm_t': 0.30154407024383545, 'train_t': 0.4661487340927124, 'train_sigma': 7.480144023895264, 'train_aux_loss': 3.868237018585205, 'train_pos_loss': 3.9374566078186035, 'train_angle_loss': 0.0, 'train_loss': 1.9687283039093018, 'train_lowT_pos_loss': 7.400672912597656, 'train_lowT_aux_loss': 7.294828414916992, 'train_lowT_loss': 3.700336456298828, 'train_lowT_t': 0.164547398686409, 'train_metric_calculation_time': 0.00427501916885376, 'train_general_step_time': 0.10112260580062866, 'train_radius_graph_time': 0.012598972694546568, 'invalid_grads_per_epoch': 0.0, '_timestamp': 1702088631.1488004}).
Epoch 3, global step 800: 'val_rmsd<2' was not in top 1
wandb: WARNING (User provided step: 800 is less than current step: 801. Dropping entry: {'trainer/global_step': 800.0, 'epoch': 3.0, 'fake_lig_ratio': 0.0, 'train_num_res': 97.955, 'train_batch_idx': 99.5, 'train_num_ligs': 1.0, 'train_num_designable': 15.23, 'train_lig_size': 34.255, 'train_rec_sigma': 7.497665882110596, 'train_norm_t': 0.32168442010879517, 'train_t': 0.4930582046508789, 'train_sigma': 7.497665882110596, 'train_aux_loss': 3.887444496154785, 'train_pos_loss': 3.9169998168945312, 'train_angle_loss': 0.0, 'train_loss': 1.9584999084472656, 'train_lowT_pos_loss': 7.844211101531982, 'train_lowT_aux_loss': 7.784700870513916, 'train_lowT_loss': 3.922105550765991, 'train_lowT_t': 0.1626943051815033, 'train_metric_calculation_time': 0.004147124290466308, 'train_general_step_time': 0.10107696533203125, 'train_radius_graph_time': 0.012715699672698975, 'invalid_grads_per_epoch': 0.0, '_timestamp': 1702088838.3403926}).
Epoch 4, global step 1000: 'val_rmsd<2' was not in top 1
`Trainer.fit` stopped: `max_epochs=5` reached.
Restoring states from the checkpoint path at ./pocket_gen/nr6491gy/checkpoints/best.ckpt
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Loaded model weights from the checkpoint at ./pocket_gen/nr6491gy/checkpoints/best.ckpt
wandb: WARNING (User provided step: 1000 is less than current step: 1001. Dropping entry: {'trainer/global_step': 1000.0, 'epoch': 4.0, 'fake_lig_ratio': 0.0, 'train_num_res': 97.015, 'train_batch_idx': 99.5, 'train_num_ligs': 1.0, 'train_num_designable': 14.7, 'train_lig_size': 32.905, 'train_rec_sigma': 7.474596977233887, 'train_norm_t': 0.33631378412246704, 'train_t': 0.502889096736908, 'train_sigma': 7.474596977233887, 'train_aux_loss': 3.7114040851593018, 'train_pos_loss': 3.711440324783325, 'train_angle_loss': 0.0, 'train_loss': 1.8557201623916626, 'train_lowT_pos_loss': 7.736259937286377, 'train_lowT_aux_loss': 7.78319787979126, 'train_lowT_loss': 3.8681299686431885, 'train_lowT_t': 0.1578061580657959, 'train_metric_calculation_time': 0.004116637706756592, 'train_general_step_time': 0.09851530194282532, 'train_radius_graph_time': 0.012217836380004883, 'invalid_grads_per_epoch': 0.0, '_timestamp': 1702089045.947858}).
Traceback (most recent call last):
  File "/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/samhuang/Documents/GitHub/MLCB2023_Final_Project/HF/FlowSite_1208/train.py", line 86, in <module>
    main_function()
  File "/home/samhuang/Documents/GitHub/MLCB2023_Final_Project/HF/FlowSite_1208/train.py", line 83, in main_function
    trainer.test(model=model_module, dataloaders=predict_loader, ckpt_path=args.checkpoint if args.run_test else 'best', verbose=True)
  File "/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 754, in test
    return call._call_and_handle_interrupt(
  File "/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/lightning/pytorch/trainer/call.py", line 44, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 794, in _test_impl
    results = self._run(model, ckpt_path=ckpt_path)
  File "/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 989, in _run
    results = self._run_stage()
  File "/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 1028, in _run_stage
    return self._evaluation_loop.run()
  File "/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/lightning/pytorch/loops/utilities.py", line 182, in _decorator
    return loop_run(self, *args, **kwargs)
  File "/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/lightning/pytorch/loops/evaluation_loop.py", line 141, in run
    return self.on_run_end()
  File "/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/lightning/pytorch/loops/evaluation_loop.py", line 273, in on_run_end
    self._print_results(logged_outputs, self._stage.value)
  File "/home/samhuang/mambaforge/envs/flowsite/lib/python3.10/site-packages/lightning/pytorch/loops/evaluation_loop.py", line 547, in _print_results
    if sys.stdout.encoding is not None:
AttributeError: 'Logger' object has no attribute 'encoding'
wandb: WARNING No program path found, not creating job artifact. See https://docs.wandb.ai/guides/launch/create-job
wandb: - 0.005 MB of 0.005 MB uploadedwandb: \ 0.005 MB of 0.109 MB uploadedwandb: | 0.109 MB of 0.109 MB uploadedwandb: 
wandb: Run history:
wandb:                                    epoch ▁▁▁▁▁▁▁▁▂▂▂▂▂▂▂▂▄▄▄▄▄▄▄▄▅▅▅▅▅▅▅▅▇▇▇▇▇▇▇█
wandb:                           fake_lig_ratio ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  invalid_grads_per_epoch ▁▁▁▁▁▁▁▁▁▁▁
wandb:                          iter_angle_loss ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                            iter_aux_loss ▅▅██▄▄▃▃▃▃▄▄▁▁▂▂▃▃▂▂▅▅▂▂▃▃▅▅▅▅▄▄▂▂▁▁▄▄▅▅
wandb:                           iter_batch_idx ▁▁▃▃▆▆██▄▄▃▃▆▆██▄▄▃▃▆▆██▄▄▃▃▆▆██▄▄▃▃▆▆██
wandb:                       iter_centroid_rmsd ▇▇▇▇▇█████▁▁▁▁▁▃▃▃▃▃
wandb:                     iter_centroid_rmsd<1 ▅▅▅▅▅▁▁▁▁▁█████▃▃▃▃▃
wandb:              iter_centroid_rmsd<1_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 iter_centroid_rmsd<1_out ▅▅▅▅▅▁▁▁▁▁█████▁▁▁▁▁
wandb:          iter_centroid_rmsd<1_out_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     iter_centroid_rmsd<2 ▅▅▅▅▅▁▁▁▁▁█████▄▄▄▄▄
wandb:              iter_centroid_rmsd<2_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 iter_centroid_rmsd<2_out ▆▆▆▆▆▁▁▁▁▁█████▃▃▃▃▃
wandb:          iter_centroid_rmsd<2_out_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     iter_centroid_rmsd<5 ▁▁▁▁▁▄▄▄▄▄▇▇▇▇▇█████
wandb:              iter_centroid_rmsd<5_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 iter_centroid_rmsd<5_out ▁▁▁▁▁███████████████
wandb:          iter_centroid_rmsd<5_out_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                iter_centroid_rmsd_median ▅▅▅▅▅█████▁▁▁▁▁▆▆▆▆▆
wandb:                   iter_centroid_rmsd_out ██████████▁▁▁▁▁▄▄▄▄▄
wandb:            iter_centroid_rmsd_out_median ▇▇▇▇▇█████▁▁▁▁▁▇▇▇▇▇
wandb:                   iter_general_step_time ▃▃▁▁▁▁▁▁██▁▁▁▁▁▁██▁▁▁▁▁▁██▁▁▁▁▁▁██▁▁▁▁▁▁
wandb:                         iter_kabsch_rmsd ▅▅▅▅▅▂▂▂▂▂▁▁▁▁▁█████
wandb:                       iter_kabsch_rmsd<1 ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                iter_kabsch_rmsd<1_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                   iter_kabsch_rmsd<1_out ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            iter_kabsch_rmsd<1_out_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                       iter_kabsch_rmsd<2 ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█████
wandb:                iter_kabsch_rmsd<2_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                   iter_kabsch_rmsd<2_out ▃▃▃▃▃▁▁▁▁▁▂▂▂▂▂█████
wandb:            iter_kabsch_rmsd<2_out_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                       iter_kabsch_rmsd<5 ▅▅▅▅▅█████▆▆▆▆▆▁▁▁▁▁
wandb:                iter_kabsch_rmsd<5_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                   iter_kabsch_rmsd<5_out ▇▇▇▇▇█████▇▇▇▇▇▁▁▁▁▁
wandb:            iter_kabsch_rmsd<5_out_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  iter_kabsch_rmsd_median ▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁█████
wandb:                     iter_kabsch_rmsd_out ▃▃▃▃▃▁▁▁▁▁▁▁▁▁▁█████
wandb:              iter_kabsch_rmsd_out_median ▁▁▁▁▁▂▂▂▂▂▁▁▁▁▁█████
wandb:                            iter_lig_size ██▆▆▃▃▂▂▄▄▄▄▂▂▅▅▄▄▁▁▃▃▇▇▅▅▅▅▆▆▃▃▄▄▄▄▂▂██
wandb:                                iter_loss ▅▅██▄▄▂▂▃▃▄▄▁▁▂▂▃▃▂▂▅▅▂▂▂▂▅▅▄▄▄▄▂▂▁▁▄▄▄▄
wandb:                       iter_lowT_aux_loss ██▅▅▅▅██▄▄▃▃▃▃▃▃▄▄▁▁▂▂▃▃▂▂▃▃▅▅▇▇▂▂▂▂▆▆▆▆
wandb:                           iter_lowT_loss ██▅▅▅▅▇▇▃▃▃▃▂▂▂▂▃▃▁▁▂▂▃▃▂▂▂▂▅▅▇▇▂▂▁▁▅▅▄▄
wandb:                       iter_lowT_pos_loss ██▅▅▅▅▇▇▃▃▃▃▂▂▂▂▃▃▁▁▂▂▃▃▂▂▂▂▅▅▇▇▂▂▁▁▅▅▄▄
wandb:                              iter_lowT_t ▅▅▂▂██▄▄▆▆██▇▇▁▁▆▆▆▆▅▅▄▄▆▆▅▅▃▃▆▆▅▅▆▆▅▅▃▃
wandb:             iter_metric_calculation_time ▁▁▁▁▁▁▁▁██▁▁▁▁▁▁██▁▁▁▁▁▁██▁▁▁▁▁▁██▁▁▁▁▁▁
wandb:                              iter_norm_t ▄▄▁▁▄▄██▄▄▅▅▇▇▄▄▄▄▃▃▁▁▄▄▄▄▂▂▃▃▄▄▄▄▅▅▃▃▄▄
wandb:                      iter_num_designable ▆▆▅▅▄▄▁▁▅▅▂▂▄▄▅▅▄▄▄▄▆▆██▅▅▅▅▅▅▆▆▅▅▃▃▅▅▄▄
wandb:                            iter_num_ligs ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                             iter_num_res ▄▄▆▆██▃▃▇▇▃▃▇▇▅▅▅▅▆▆▅▅▇▇▆▆▂▂▅▅▄▄▆▆▄▄▆▆▁▁
wandb:                            iter_pos_loss ▅▅██▄▄▂▂▃▃▄▄▁▁▂▂▃▃▂▂▅▅▂▂▂▂▅▅▄▄▄▄▂▂▁▁▄▄▄▄
wandb:                   iter_radius_graph_time ▅▅▅▅▁▁▇▇▄▄▅▅▆▆▇▇▃▃▄▄▅▅▇▇▄▄▆▆▅▅▂▂▃▃██▁▁▂▂
wandb:                           iter_rec_sigma ▃▃▆▆██▃▃▆▆▃▃▇▇▆▆▄▄▅▅▅▅██▆▆▄▄▅▅▄▄▅▅▆▆▅▅▁▁
wandb:                                iter_rmsd ▃▃▃▃▃▄▄▄▄▄▁▁▁▁▁█████
wandb:                              iter_rmsd<1 ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                       iter_rmsd<1_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                          iter_rmsd<1_out ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                   iter_rmsd<1_out_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                              iter_rmsd<2 ▁▁▁▁▁▁▁▁▁▁█████▁▁▁▁▁
wandb:                       iter_rmsd<2_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                          iter_rmsd<2_out ▁▁▁▁▁▁▁▁▁▁█████▁▁▁▁▁
wandb:                   iter_rmsd<2_out_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                              iter_rmsd<5 ▅▅▅▅▅▁▁▁▁▁█████▁▁▁▁▁
wandb:                       iter_rmsd<5_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                          iter_rmsd<5_out ▅▅▅▅▅▃▃▃▃▃█████▁▁▁▁▁
wandb:                   iter_rmsd<5_out_median ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                         iter_rmsd_median ▃▃▃▃▃▅▅▅▅▅▁▁▁▁▁█████
wandb:                            iter_rmsd_out ▃▃▃▃▃▄▄▄▄▄▁▁▁▁▁█████
wandb:                     iter_rmsd_out_median ▃▃▃▃▃▄▄▄▄▄▁▁▁▁▁█████
wandb:                               iter_sigma ▃▃▆▆██▃▃▆▆▃▃▇▇▆▆▄▄▅▅▅▅██▆▆▄▄▅▅▄▄▅▅▆▆▅▅▁▁
wandb:                                   iter_t ▅▅▁▁▅▅██▅▅▅▅██▄▄▄▄▄▄▁▁▅▅▅▅▂▂▄▄▅▅▄▄▅▅▄▄▄▄
wandb:                          pred_angle_loss ▁
wandb:                 pred_angle_loss_msdTop10 ▁
wandb:                  pred_angle_loss_msdTop5 ▁
wandb:                      pred_angle_loss_std ▁
wandb:                            pred_aux_loss ▁
wandb:                   pred_aux_loss_msdTop10 ▁
wandb:                    pred_aux_loss_msdTop5 ▁
wandb:                        pred_aux_loss_std ▁
wandb:                           pred_batch_idx ▁
wandb:                  pred_batch_idx_msdTop10 ▁
wandb:                   pred_batch_idx_msdTop5 ▁
wandb:                       pred_batch_idx_std ▁
wandb:                       pred_centroid_rmsd ▁
wandb:                     pred_centroid_rmsd<1 ▁
wandb:              pred_centroid_rmsd<1_median ▁
wandb:            pred_centroid_rmsd<1_msdTop10 ▁
wandb:     pred_centroid_rmsd<1_msdTop10_median ▁
wandb:             pred_centroid_rmsd<1_msdTop5 ▁
wandb:      pred_centroid_rmsd<1_msdTop5_median ▁
wandb:                 pred_centroid_rmsd<1_out ▁
wandb:          pred_centroid_rmsd<1_out_median ▁
wandb:        pred_centroid_rmsd<1_out_msdTop10 ▁
wandb: pred_centroid_rmsd<1_out_msdTop10_median ▁
wandb:         pred_centroid_rmsd<1_out_msdTop5 ▁
wandb:  pred_centroid_rmsd<1_out_msdTop5_median ▁
wandb:             pred_centroid_rmsd<1_out_std ▁
wandb:                 pred_centroid_rmsd<1_std ▁
wandb:                     pred_centroid_rmsd<2 ▁
wandb:              pred_centroid_rmsd<2_median ▁
wandb:            pred_centroid_rmsd<2_msdTop10 ▁
wandb:     pred_centroid_rmsd<2_msdTop10_median ▁
wandb:             pred_centroid_rmsd<2_msdTop5 ▁
wandb:      pred_centroid_rmsd<2_msdTop5_median ▁
wandb:                 pred_centroid_rmsd<2_out ▁
wandb:          pred_centroid_rmsd<2_out_median ▁
wandb:        pred_centroid_rmsd<2_out_msdTop10 ▁
wandb: pred_centroid_rmsd<2_out_msdTop10_median ▁
wandb:         pred_centroid_rmsd<2_out_msdTop5 ▁
wandb:  pred_centroid_rmsd<2_out_msdTop5_median ▁
wandb:             pred_centroid_rmsd<2_out_std ▁
wandb:                 pred_centroid_rmsd<2_std ▁
wandb:                     pred_centroid_rmsd<5 ▁
wandb:              pred_centroid_rmsd<5_median ▁
wandb:            pred_centroid_rmsd<5_msdTop10 ▁
wandb:     pred_centroid_rmsd<5_msdTop10_median ▁
wandb:             pred_centroid_rmsd<5_msdTop5 ▁
wandb:      pred_centroid_rmsd<5_msdTop5_median ▁
wandb:                 pred_centroid_rmsd<5_out ▁
wandb:          pred_centroid_rmsd<5_out_median ▁
wandb:        pred_centroid_rmsd<5_out_msdTop10 ▁
wandb: pred_centroid_rmsd<5_out_msdTop10_median ▁
wandb:         pred_centroid_rmsd<5_out_msdTop5 ▁
wandb:  pred_centroid_rmsd<5_out_msdTop5_median ▁
wandb:             pred_centroid_rmsd<5_out_std ▁
wandb:                 pred_centroid_rmsd<5_std ▁
wandb:                pred_centroid_rmsd_median ▁
wandb:              pred_centroid_rmsd_msdTop10 ▁
wandb:       pred_centroid_rmsd_msdTop10_median ▁
wandb:               pred_centroid_rmsd_msdTop5 ▁
wandb:        pred_centroid_rmsd_msdTop5_median ▁
wandb:                   pred_centroid_rmsd_out ▁
wandb:            pred_centroid_rmsd_out_median ▁
wandb:          pred_centroid_rmsd_out_msdTop10 ▁
wandb:   pred_centroid_rmsd_out_msdTop10_median ▁
wandb:           pred_centroid_rmsd_out_msdTop5 ▁
wandb:    pred_centroid_rmsd_out_msdTop5_median ▁
wandb:               pred_centroid_rmsd_out_std ▁
wandb:                   pred_centroid_rmsd_std ▁
wandb:                   pred_general_step_time ▁
wandb:          pred_general_step_time_msdTop10 ▁
wandb:           pred_general_step_time_msdTop5 ▁
wandb:               pred_general_step_time_std ▁
wandb:                         pred_kabsch_rmsd ▁
wandb:                       pred_kabsch_rmsd<1 ▁
wandb:                pred_kabsch_rmsd<1_median ▁
wandb:              pred_kabsch_rmsd<1_msdTop10 ▁
wandb:       pred_kabsch_rmsd<1_msdTop10_median ▁
wandb:               pred_kabsch_rmsd<1_msdTop5 ▁
wandb:        pred_kabsch_rmsd<1_msdTop5_median ▁
wandb:                   pred_kabsch_rmsd<1_out ▁
wandb:            pred_kabsch_rmsd<1_out_median ▁
wandb:          pred_kabsch_rmsd<1_out_msdTop10 ▁
wandb:   pred_kabsch_rmsd<1_out_msdTop10_median ▁
wandb:           pred_kabsch_rmsd<1_out_msdTop5 ▁
wandb:    pred_kabsch_rmsd<1_out_msdTop5_median ▁
wandb:               pred_kabsch_rmsd<1_out_std ▁
wandb:                   pred_kabsch_rmsd<1_std ▁
wandb:                       pred_kabsch_rmsd<2 ▁
wandb:                pred_kabsch_rmsd<2_median ▁
wandb:              pred_kabsch_rmsd<2_msdTop10 ▁
wandb:       pred_kabsch_rmsd<2_msdTop10_median ▁
wandb:               pred_kabsch_rmsd<2_msdTop5 ▁
wandb:        pred_kabsch_rmsd<2_msdTop5_median ▁
wandb:                   pred_kabsch_rmsd<2_out ▁
wandb:            pred_kabsch_rmsd<2_out_median ▁
wandb:          pred_kabsch_rmsd<2_out_msdTop10 ▁
wandb:   pred_kabsch_rmsd<2_out_msdTop10_median ▁
wandb:           pred_kabsch_rmsd<2_out_msdTop5 ▁
wandb:    pred_kabsch_rmsd<2_out_msdTop5_median ▁
wandb:               pred_kabsch_rmsd<2_out_std ▁
wandb:                   pred_kabsch_rmsd<2_std ▁
wandb:                       pred_kabsch_rmsd<5 ▁
wandb:                pred_kabsch_rmsd<5_median ▁
wandb:              pred_kabsch_rmsd<5_msdTop10 ▁
wandb:       pred_kabsch_rmsd<5_msdTop10_median ▁
wandb:               pred_kabsch_rmsd<5_msdTop5 ▁
wandb:        pred_kabsch_rmsd<5_msdTop5_median ▁
wandb:                   pred_kabsch_rmsd<5_out ▁
wandb:            pred_kabsch_rmsd<5_out_median ▁
wandb:          pred_kabsch_rmsd<5_out_msdTop10 ▁
wandb:   pred_kabsch_rmsd<5_out_msdTop10_median ▁
wandb:           pred_kabsch_rmsd<5_out_msdTop5 ▁
wandb:    pred_kabsch_rmsd<5_out_msdTop5_median ▁
wandb:               pred_kabsch_rmsd<5_out_std ▁
wandb:                   pred_kabsch_rmsd<5_std ▁
wandb:                  pred_kabsch_rmsd_median ▁
wandb:                pred_kabsch_rmsd_msdTop10 ▁
wandb:         pred_kabsch_rmsd_msdTop10_median ▁
wandb:                 pred_kabsch_rmsd_msdTop5 ▁
wandb:          pred_kabsch_rmsd_msdTop5_median ▁
wandb:                     pred_kabsch_rmsd_out ▁
wandb:              pred_kabsch_rmsd_out_median ▁
wandb:            pred_kabsch_rmsd_out_msdTop10 ▁
wandb:     pred_kabsch_rmsd_out_msdTop10_median ▁
wandb:             pred_kabsch_rmsd_out_msdTop5 ▁
wandb:      pred_kabsch_rmsd_out_msdTop5_median ▁
wandb:                 pred_kabsch_rmsd_out_std ▁
wandb:                     pred_kabsch_rmsd_std ▁
wandb:                            pred_lig_size ▁
wandb:                   pred_lig_size_msdTop10 ▁
wandb:                    pred_lig_size_msdTop5 ▁
wandb:                        pred_lig_size_std ▁
wandb:                                pred_loss ▁
wandb:                       pred_loss_msdTop10 ▁
wandb:                        pred_loss_msdTop5 ▁
wandb:                            pred_loss_std ▁
wandb:                       pred_lowT_aux_loss ▁
wandb:                           pred_lowT_loss ▁
wandb:                       pred_lowT_pos_loss ▁
wandb:                              pred_lowT_t ▁
wandb:             pred_metric_calculation_time ▁
wandb:    pred_metric_calculation_time_msdTop10 ▁
wandb:     pred_metric_calculation_time_msdTop5 ▁
wandb:         pred_metric_calculation_time_std ▁
wandb:                              pred_norm_t ▁
wandb:                     pred_norm_t_msdTop10 ▁
wandb:                      pred_norm_t_msdTop5 ▁
wandb:                          pred_norm_t_std ▁
wandb:                      pred_num_designable ▁
wandb:             pred_num_designable_msdTop10 ▁
wandb:              pred_num_designable_msdTop5 ▁
wandb:                  pred_num_designable_std ▁
wandb:                            pred_num_ligs ▁
wandb:                   pred_num_ligs_msdTop10 ▁
wandb:                    pred_num_ligs_msdTop5 ▁
wandb:                        pred_num_ligs_std ▁
wandb:                             pred_num_res ▁
wandb:                    pred_num_res_msdTop10 ▁
wandb:                     pred_num_res_msdTop5 ▁
wandb:                         pred_num_res_std ▁
wandb:                            pred_pos_loss ▁
wandb:                   pred_pos_loss_msdTop10 ▁
wandb:                    pred_pos_loss_msdTop5 ▁
wandb:                        pred_pos_loss_std ▁
wandb:                   pred_radius_graph_time ▁
wandb:          pred_radius_graph_time_msdTop10 ▁
wandb:           pred_radius_graph_time_msdTop5 ▁
wandb:               pred_radius_graph_time_std ▁
wandb:                           pred_rec_sigma ▁
wandb:                  pred_rec_sigma_msdTop10 ▁
wandb:                   pred_rec_sigma_msdTop5 ▁
wandb:                       pred_rec_sigma_std ▁
wandb:                                pred_rmsd ▁
wandb:                              pred_rmsd<1 ▁
wandb:                       pred_rmsd<1_median ▁
wandb:                     pred_rmsd<1_msdTop10 ▁
wandb:              pred_rmsd<1_msdTop10_median ▁
wandb:                      pred_rmsd<1_msdTop5 ▁
wandb:               pred_rmsd<1_msdTop5_median ▁
wandb:                          pred_rmsd<1_out ▁
wandb:                   pred_rmsd<1_out_median ▁
wandb:                 pred_rmsd<1_out_msdTop10 ▁
wandb:          pred_rmsd<1_out_msdTop10_median ▁
wandb:                  pred_rmsd<1_out_msdTop5 ▁
wandb:           pred_rmsd<1_out_msdTop5_median ▁
wandb:                      pred_rmsd<1_out_std ▁
wandb:                          pred_rmsd<1_std ▁
wandb:                              pred_rmsd<2 ▁
wandb:                       pred_rmsd<2_median ▁
wandb:                     pred_rmsd<2_msdTop10 ▁
wandb:              pred_rmsd<2_msdTop10_median ▁
wandb:                      pred_rmsd<2_msdTop5 ▁
wandb:               pred_rmsd<2_msdTop5_median ▁
wandb:                          pred_rmsd<2_out ▁
wandb:                   pred_rmsd<2_out_median ▁
wandb:                 pred_rmsd<2_out_msdTop10 ▁
wandb:          pred_rmsd<2_out_msdTop10_median ▁
wandb:                  pred_rmsd<2_out_msdTop5 ▁
wandb:           pred_rmsd<2_out_msdTop5_median ▁
wandb:                      pred_rmsd<2_out_std ▁
wandb:                          pred_rmsd<2_std ▁
wandb:                              pred_rmsd<5 ▁
wandb:                       pred_rmsd<5_median ▁
wandb:                     pred_rmsd<5_msdTop10 ▁
wandb:              pred_rmsd<5_msdTop10_median ▁
wandb:                      pred_rmsd<5_msdTop5 ▁
wandb:               pred_rmsd<5_msdTop5_median ▁
wandb:                          pred_rmsd<5_out ▁
wandb:                   pred_rmsd<5_out_median ▁
wandb:                 pred_rmsd<5_out_msdTop10 ▁
wandb:          pred_rmsd<5_out_msdTop10_median ▁
wandb:                  pred_rmsd<5_out_msdTop5 ▁
wandb:           pred_rmsd<5_out_msdTop5_median ▁
wandb:                      pred_rmsd<5_out_std ▁
wandb:                          pred_rmsd<5_std ▁
wandb:                         pred_rmsd_median ▁
wandb:                       pred_rmsd_msdTop10 ▁
wandb:                pred_rmsd_msdTop10_median ▁
wandb:                        pred_rmsd_msdTop5 ▁
wandb:                 pred_rmsd_msdTop5_median ▁
wandb:                            pred_rmsd_out ▁
wandb:                     pred_rmsd_out_median ▁
wandb:                   pred_rmsd_out_msdTop10 ▁
wandb:            pred_rmsd_out_msdTop10_median ▁
wandb:                    pred_rmsd_out_msdTop5 ▁
wandb:             pred_rmsd_out_msdTop5_median ▁
wandb:                        pred_rmsd_out_std ▁
wandb:                            pred_rmsd_std ▁
wandb:                               pred_sigma ▁
wandb:                      pred_sigma_msdTop10 ▁
wandb:                       pred_sigma_msdTop5 ▁
wandb:                           pred_sigma_std ▁
wandb:                                   pred_t ▁
wandb:                          pred_t_msdTop10 ▁
wandb:                           pred_t_msdTop5 ▁
wandb:                               pred_t_std ▁
wandb:                         train_angle_loss ▁▁▁▁▁
wandb:                           train_aux_loss █▁▃▄▁
wandb:                          train_batch_idx ▁▁▁▁▁
wandb:                  train_general_step_time █▂▁▁▁
wandb:                           train_lig_size ▆▁▁█▄
wandb:                               train_loss █▂▄▃▁
wandb:                      train_lowT_aux_loss █▁▁▄▄
wandb:                          train_lowT_loss █▁▁▄▃
wandb:                      train_lowT_pos_loss █▁▁▄▃
wandb:                             train_lowT_t ▁▅█▇▄
wandb:            train_metric_calculation_time █▅▅▂▁
wandb:                             train_norm_t ██▁▄▆
wandb:                     train_num_designable ▁▄▅█▂
wandb:                           train_num_ligs ▁▁▁▁▁
wandb:                            train_num_res ▅█▃▃▁
wandb:                           train_pos_loss █▂▄▃▁
wandb:                  train_radius_graph_time ▅█▄▅▁
wandb:                          train_rec_sigma ▃█▁▃▁
wandb:                              train_sigma ▃█▁▃▁
wandb:                                  train_t ██▁▅▇
wandb:                      trainer/global_step ▁▁▁▁▂▂▂▂▂▂▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇█████
wandb:                           val_angle_loss ▁▁▁▁▁
wandb:                             val_aux_loss ▅▆▆▁█
wandb:                            val_batch_idx ▁▁▁▁▁
wandb:                        val_centroid_rmsd ▇█▄▅▁
wandb:                      val_centroid_rmsd<1 ▅▁█▃▆
wandb:               val_centroid_rmsd<1_median ▁▁▁▁▁
wandb:                  val_centroid_rmsd<1_out ▅▁█▁▆
wandb:           val_centroid_rmsd<1_out_median ▁▁▁▁▁
wandb:                      val_centroid_rmsd<2 ▅▁█▄▇
wandb:               val_centroid_rmsd<2_median ▁▁▁▁▁
wandb:                  val_centroid_rmsd<2_out ▆▁█▃▇
wandb:           val_centroid_rmsd<2_out_median ▁▁▁▁▁
wandb:                      val_centroid_rmsd<5 ▁▃▆▇█
wandb:               val_centroid_rmsd<5_median ▁▁▁▁▁
wandb:                  val_centroid_rmsd<5_out ▁▅▅▅█
wandb:           val_centroid_rmsd<5_out_median ▁▁▁▁▁
wandb:                 val_centroid_rmsd_median ▅█▃▆▁
wandb:                    val_centroid_rmsd_out ██▄▆▁
wandb:             val_centroid_rmsd_out_median ▇█▂▇▁
wandb:                    val_general_step_time ▄▃▁▅█
wandb:                          val_kabsch_rmsd ▅▃▂█▁
wandb:                        val_kabsch_rmsd<1 ▁▁▁▁▁
wandb:                 val_kabsch_rmsd<1_median ▁▁▁▁▁
wandb:                    val_kabsch_rmsd<1_out ▁▁▁▁▁
wandb:             val_kabsch_rmsd<1_out_median ▁▁▁▁▁
wandb:                        val_kabsch_rmsd<2 ▁▁▁█▁
wandb:                 val_kabsch_rmsd<2_median ▁▁▁▁▁
wandb:                    val_kabsch_rmsd<2_out ▃▁▂█▃
wandb:             val_kabsch_rmsd<2_out_median ▁▁▁▁▁
wandb:                        val_kabsch_rmsd<5 ▅█▆▁▆
wandb:                 val_kabsch_rmsd<5_median ▁▁▁▁▁
wandb:                    val_kabsch_rmsd<5_out ▇█▇▁▆
wandb:             val_kabsch_rmsd<5_out_median ▁▁▁▁▁
wandb:                   val_kabsch_rmsd_median ▄▃▃█▁
wandb:                      val_kabsch_rmsd_out ▄▃▃█▁
wandb:               val_kabsch_rmsd_out_median ▄▄▄█▁
wandb:                             val_lig_size ▁▁▁▁▁
wandb:                                 val_loss █▆▆▁▅
wandb:                        val_lowT_aux_loss █▆▃▁▆
wandb:                            val_lowT_loss █▆▁▁▄
wandb:                        val_lowT_pos_loss █▆▁▁▄
wandb:                               val_lowT_t █▅▆▂▁
wandb:              val_metric_calculation_time ▅▁▁▅█
wandb:                               val_norm_t █▅▄▃▁
wandb:                       val_num_designable ▁▁▁▁▁
wandb:                             val_num_ligs ▁▁▁▁▁
wandb:                              val_num_res ▃▁▄▁█
wandb:                             val_pos_loss █▆▆▁▅
wandb:                    val_radius_graph_time ▇▁██▂
wandb:                            val_rec_sigma ▁▃▃▁█
wandb:                                 val_rmsd ▃▄▂█▁
wandb:                               val_rmsd<1 ▁▁▁▁▁
wandb:                        val_rmsd<1_median ▁▁▁▁▁
wandb:                           val_rmsd<1_out ▁▁▁▁▁
wandb:                    val_rmsd<1_out_median ▁▁▁▁▁
wandb:                               val_rmsd<2 ▁▁█▁▁
wandb:                        val_rmsd<2_median ▁▁▁▁▁
wandb:                           val_rmsd<2_out ▁▁█▁▁
wandb:                    val_rmsd<2_out_median ▁▁▁▁▁
wandb:                               val_rmsd<5 ▅▁█▁▇
wandb:                        val_rmsd<5_median ▁▁▁▁▁
wandb:                           val_rmsd<5_out ▅▃█▁▇
wandb:                    val_rmsd<5_out_median ▁▁▁▁▁
wandb:                          val_rmsd_median ▃▅▁█▁
wandb:                             val_rmsd_out ▃▄▁█▁
wandb:                      val_rmsd_out_median ▃▄▁█▂
wandb:                                val_sigma ▁▃▃▁█
wandb:                                    val_t █▄▂▂▁
wandb: 
wandb: Run summary:
wandb:                                    epoch 5.0
wandb:                           fake_lig_ratio 0.0
wandb:                  invalid_grads_per_epoch 0.0
wandb:                          iter_angle_loss 0.0
wandb:                            iter_aux_loss 4.10471
wandb:                           iter_batch_idx 174.5
wandb:                       iter_centroid_rmsd 3.1603
wandb:                     iter_centroid_rmsd<1 0.04
wandb:              iter_centroid_rmsd<1_median 0.0
wandb:                 iter_centroid_rmsd<1_out 0.025
wandb:          iter_centroid_rmsd<1_out_median 0.0
wandb:                     iter_centroid_rmsd<2 0.28
wandb:              iter_centroid_rmsd<2_median 0.0
wandb:                 iter_centroid_rmsd<2_out 0.275
wandb:          iter_centroid_rmsd<2_out_median 0.0
wandb:                     iter_centroid_rmsd<5 0.87
wandb:              iter_centroid_rmsd<5_median 1.0
wandb:                 iter_centroid_rmsd<5_out 0.865
wandb:          iter_centroid_rmsd<5_out_median 1.0
wandb:                iter_centroid_rmsd_median 2.96811
wandb:                   iter_centroid_rmsd_out 3.13807
wandb:            iter_centroid_rmsd_out_median 2.92049
wandb:                   iter_general_step_time 0.10684
wandb:                         iter_kabsch_rmsd 4.73795
wandb:                       iter_kabsch_rmsd<1 0.0
wandb:                iter_kabsch_rmsd<1_median 0.0
wandb:                   iter_kabsch_rmsd<1_out 0.0
wandb:            iter_kabsch_rmsd<1_out_median 0.0
wandb:                       iter_kabsch_rmsd<2 0.055
wandb:                iter_kabsch_rmsd<2_median 0.0
wandb:                   iter_kabsch_rmsd<2_out 0.055
wandb:            iter_kabsch_rmsd<2_out_median 0.0
wandb:                       iter_kabsch_rmsd<5 0.62
wandb:                iter_kabsch_rmsd<5_median 1.0
wandb:                   iter_kabsch_rmsd<5_out 0.6
wandb:            iter_kabsch_rmsd<5_out_median 1.0
wandb:                  iter_kabsch_rmsd_median 4.38562
wandb:                     iter_kabsch_rmsd_out 4.82207
wandb:              iter_kabsch_rmsd_out_median 4.42385
wandb:                            iter_lig_size 38.5
wandb:                                iter_loss 1.98092
wandb:                       iter_lowT_aux_loss 8.25009
wandb:                           iter_lowT_loss 3.99306
wandb:                       iter_lowT_pos_loss 7.98612
wandb:                              iter_lowT_t 0.13729
wandb:             iter_metric_calculation_time 0.00428
wandb:                              iter_norm_t 0.33984
wandb:                      iter_num_designable 14.78
wandb:                            iter_num_ligs 1.0
wandb:                             iter_num_res 91.5
wandb:                            iter_pos_loss 3.96183
wandb:                   iter_radius_graph_time 0.01196
wandb:                           iter_rec_sigma 7.33229
wandb:                                iter_rmsd 6.82242
wandb:                              iter_rmsd<1 0.0
wandb:                       iter_rmsd<1_median 0.0
wandb:                          iter_rmsd<1_out 0.0
wandb:                   iter_rmsd<1_out_median 0.0
wandb:                              iter_rmsd<2 0.0
wandb:                       iter_rmsd<2_median 0.0
wandb:                          iter_rmsd<2_out 0.0
wandb:                   iter_rmsd<2_out_median 0.0
wandb:                              iter_rmsd<5 0.26
wandb:                       iter_rmsd<5_median 0.0
wandb:                          iter_rmsd<5_out 0.24
wandb:                   iter_rmsd<5_out_median 0.0
wandb:                         iter_rmsd_median 6.54511
wandb:                            iter_rmsd_out 6.9619
wandb:                     iter_rmsd_out_median 6.72709
wandb:                               iter_sigma 7.33229
wandb:                                   iter_t 0.49059
wandb:                          pred_angle_loss 0.0
wandb:                 pred_angle_loss_msdTop10 0.0
wandb:                  pred_angle_loss_msdTop5 0.0
wandb:                      pred_angle_loss_std 0.0
wandb:                            pred_aux_loss 3.6462
wandb:                   pred_aux_loss_msdTop10 3.60525
wandb:                    pred_aux_loss_msdTop5 3.75225
wandb:                        pred_aux_loss_std 3.08288
wandb:                           pred_batch_idx 99.5
wandb:                  pred_batch_idx_msdTop10 99.5
wandb:                   pred_batch_idx_msdTop5 99.5
wandb:                       pred_batch_idx_std 0.0
wandb:                       pred_centroid_rmsd 3.1474
wandb:                     pred_centroid_rmsd<1 0.0815
wandb:              pred_centroid_rmsd<1_median 0.0
wandb:            pred_centroid_rmsd<1_msdTop10 0.205
wandb:     pred_centroid_rmsd<1_msdTop10_median 0.0
wandb:             pred_centroid_rmsd<1_msdTop5 0.155
wandb:      pred_centroid_rmsd<1_msdTop5_median 0.0
wandb:                 pred_centroid_rmsd<1_out 0.0925
wandb:          pred_centroid_rmsd<1_out_median 0.0
wandb:        pred_centroid_rmsd<1_out_msdTop10 0.205
wandb: pred_centroid_rmsd<1_out_msdTop10_median 0.0
wandb:         pred_centroid_rmsd<1_out_msdTop5 0.165
wandb:  pred_centroid_rmsd<1_out_msdTop5_median 0.0
wandb:             pred_centroid_rmsd<1_out_std 0.17472
wandb:                 pred_centroid_rmsd<1_std 0.17003
wandb:                     pred_centroid_rmsd<2 0.3075
wandb:              pred_centroid_rmsd<2_median 0.0
wandb:            pred_centroid_rmsd<2_msdTop10 0.565
wandb:     pred_centroid_rmsd<2_msdTop10_median 1.0
wandb:             pred_centroid_rmsd<2_msdTop5 0.48
wandb:      pred_centroid_rmsd<2_msdTop5_median 0.0
wandb:                 pred_centroid_rmsd<2_out 0.3305
wandb:          pred_centroid_rmsd<2_out_median 0.0
wandb:        pred_centroid_rmsd<2_out_msdTop10 0.59
wandb: pred_centroid_rmsd<2_out_msdTop10_median 1.0
wandb:         pred_centroid_rmsd<2_out_msdTop5 0.515
wandb:  pred_centroid_rmsd<2_out_msdTop5_median 1.0
wandb:             pred_centroid_rmsd<2_out_std 0.32564
wandb:                 pred_centroid_rmsd<2_std 0.32635
wandb:                     pred_centroid_rmsd<5 0.841
wandb:              pred_centroid_rmsd<5_median 1.0
wandb:            pred_centroid_rmsd<5_msdTop10 0.96
wandb:     pred_centroid_rmsd<5_msdTop10_median 1.0
wandb:             pred_centroid_rmsd<5_msdTop5 0.93
wandb:      pred_centroid_rmsd<5_msdTop5_median 1.0
wandb:                 pred_centroid_rmsd<5_out 0.848
wandb:          pred_centroid_rmsd<5_out_median 1.0
wandb:        pred_centroid_rmsd<5_out_msdTop10 0.96
wandb: pred_centroid_rmsd<5_out_msdTop10_median 1.0
wandb:         pred_centroid_rmsd<5_out_msdTop5 0.93
wandb:  pred_centroid_rmsd<5_out_msdTop5_median 1.0
wandb:             pred_centroid_rmsd<5_out_std 0.14665
wandb:                 pred_centroid_rmsd<5_std 0.15534
wandb:                pred_centroid_rmsd_median 2.72971
wandb:              pred_centroid_rmsd_msdTop10 2.1578
wandb:       pred_centroid_rmsd_msdTop10_median 1.76634
wandb:               pred_centroid_rmsd_msdTop5 2.48662
wandb:        pred_centroid_rmsd_msdTop5_median 2.04766
wandb:                   pred_centroid_rmsd_out 3.07316
wandb:            pred_centroid_rmsd_out_median 2.65441
wandb:          pred_centroid_rmsd_out_msdTop10 2.12378
wandb:   pred_centroid_rmsd_out_msdTop10_median 1.65272
wandb:           pred_centroid_rmsd_out_msdTop5 2.43994
wandb:    pred_centroid_rmsd_out_msdTop5_median 1.96592
wandb:               pred_centroid_rmsd_out_std 1.02002
wandb:                   pred_centroid_rmsd_std 1.04596
wandb:                   pred_general_step_time 0.71196
wandb:          pred_general_step_time_msdTop10 0.70835
wandb:           pred_general_step_time_msdTop5 0.70951
wandb:               pred_general_step_time_std 0.05443
wandb:                         pred_kabsch_rmsd 4.78099
wandb:                       pred_kabsch_rmsd<1 0.0
wandb:                pred_kabsch_rmsd<1_median 0.0
wandb:              pred_kabsch_rmsd<1_msdTop10 0.0
wandb:       pred_kabsch_rmsd<1_msdTop10_median 0.0
wandb:               pred_kabsch_rmsd<1_msdTop5 0.0
wandb:        pred_kabsch_rmsd<1_msdTop5_median 0.0
wandb:                   pred_kabsch_rmsd<1_out 0.0
wandb:            pred_kabsch_rmsd<1_out_median 0.0
wandb:          pred_kabsch_rmsd<1_out_msdTop10 0.0
wandb:   pred_kabsch_rmsd<1_out_msdTop10_median 0.0
wandb:           pred_kabsch_rmsd<1_out_msdTop5 0.0
wandb:    pred_kabsch_rmsd<1_out_msdTop5_median 0.0
wandb:               pred_kabsch_rmsd<1_out_std 0.0
wandb:                   pred_kabsch_rmsd<1_std 0.0
wandb:                       pred_kabsch_rmsd<2 0.0155
wandb:                pred_kabsch_rmsd<2_median 0.0
wandb:              pred_kabsch_rmsd<2_msdTop10 0.035
wandb:       pred_kabsch_rmsd<2_msdTop10_median 0.0
wandb:               pred_kabsch_rmsd<2_msdTop5 0.03
wandb:        pred_kabsch_rmsd<2_msdTop5_median 0.0
wandb:                   pred_kabsch_rmsd<2_out 0.0085
wandb:            pred_kabsch_rmsd<2_out_median 0.0
wandb:          pred_kabsch_rmsd<2_out_msdTop10 0.02
wandb:   pred_kabsch_rmsd<2_out_msdTop10_median 0.0
wandb:           pred_kabsch_rmsd<2_out_msdTop5 0.015
wandb:    pred_kabsch_rmsd<2_out_msdTop5_median 0.0
wandb:               pred_kabsch_rmsd<2_out_std 0.01595
wandb:                   pred_kabsch_rmsd<2_std 0.02532
wandb:                       pred_kabsch_rmsd<5 0.6615
wandb:                pred_kabsch_rmsd<5_median 1.0
wandb:              pred_kabsch_rmsd<5_msdTop10 0.77
wandb:       pred_kabsch_rmsd<5_msdTop10_median 1.0
wandb:               pred_kabsch_rmsd<5_msdTop5 0.715
wandb:        pred_kabsch_rmsd<5_msdTop5_median 1.0
wandb:                   pred_kabsch_rmsd<5_out 0.6695
wandb:            pred_kabsch_rmsd<5_out_median 1.0
wandb:          pred_kabsch_rmsd<5_out_msdTop10 0.77
wandb:   pred_kabsch_rmsd<5_out_msdTop10_median 1.0
wandb:           pred_kabsch_rmsd<5_out_msdTop5 0.72
wandb:    pred_kabsch_rmsd<5_out_msdTop5_median 1.0
wandb:               pred_kabsch_rmsd<5_out_std 0.13579
wandb:                   pred_kabsch_rmsd<5_std 0.14783
wandb:                  pred_kabsch_rmsd_median 4.24345
wandb:                pred_kabsch_rmsd_msdTop10 4.31813
wandb:         pred_kabsch_rmsd_msdTop10_median 3.74248
wandb:                 pred_kabsch_rmsd_msdTop5 4.53385
wandb:          pred_kabsch_rmsd_msdTop5_median 3.95869
wandb:                     pred_kabsch_rmsd_out 4.80055
wandb:              pred_kabsch_rmsd_out_median 4.25694
wandb:            pred_kabsch_rmsd_out_msdTop10 4.38592
wandb:     pred_kabsch_rmsd_out_msdTop10_median 3.81223
wandb:             pred_kabsch_rmsd_out_msdTop5 4.57939
wandb:      pred_kabsch_rmsd_out_msdTop5_median 4.01867
wandb:                 pred_kabsch_rmsd_out_std 0.53448
wandb:                     pred_kabsch_rmsd_std 0.58623
wandb:                            pred_lig_size 36.265
wandb:                   pred_lig_size_msdTop10 36.265
wandb:                    pred_lig_size_msdTop5 36.265
wandb:                        pred_lig_size_std 0.0
wandb:                                pred_loss 1.81878
wandb:                       pred_loss_msdTop10 1.81474
wandb:                        pred_loss_msdTop5 1.87987
wandb:                            pred_loss_std 1.54546
wandb:                       pred_lowT_aux_loss 7.46372
wandb:                           pred_lowT_loss 3.71967
wandb:                       pred_lowT_pos_loss 7.43934
wandb:                              pred_lowT_t 0.15463
wandb:             pred_metric_calculation_time 0.62834
wandb:    pred_metric_calculation_time_msdTop10 0.62529
wandb:     pred_metric_calculation_time_msdTop5 0.62575
wandb:         pred_metric_calculation_time_std 0.0496
wandb:                              pred_norm_t 0.33281
wandb:                     pred_norm_t_msdTop10 0.32805
wandb:                      pred_norm_t_msdTop5 0.328
wandb:                          pred_norm_t_std 0.27901
wandb:                      pred_num_designable 15.155
wandb:             pred_num_designable_msdTop10 15.155
wandb:              pred_num_designable_msdTop5 15.155
wandb:                  pred_num_designable_std 0.0
wandb:                            pred_num_ligs 1.0
wandb:                   pred_num_ligs_msdTop10 1.0
wandb:                    pred_num_ligs_msdTop5 1.0
wandb:                        pred_num_ligs_std 0.0
wandb:                             pred_num_res 98.315
wandb:                    pred_num_res_msdTop10 98.315
wandb:                     pred_num_res_msdTop5 98.315
wandb:                         pred_num_res_std 0.0
wandb:                            pred_pos_loss 3.63755
wandb:                   pred_pos_loss_msdTop10 3.62948
wandb:                    pred_pos_loss_msdTop5 3.75974
wandb:                        pred_pos_loss_std 3.09092
wandb:                   pred_radius_graph_time 0.01191
wandb:          pred_radius_graph_time_msdTop10 0.01161
wandb:           pred_radius_graph_time_msdTop5 0.01192
wandb:               pred_radius_graph_time_std 0.00295
wandb:                           pred_rec_sigma 7.53974
wandb:                  pred_rec_sigma_msdTop10 7.53974
wandb:                   pred_rec_sigma_msdTop5 7.53974
wandb:                       pred_rec_sigma_std 0.0
wandb:                                pred_rmsd 6.32909
wandb:                              pred_rmsd<1 0.0
wandb:                       pred_rmsd<1_median 0.0
wandb:                     pred_rmsd<1_msdTop10 0.0
wandb:              pred_rmsd<1_msdTop10_median 0.0
wandb:                      pred_rmsd<1_msdTop5 0.0
wandb:               pred_rmsd<1_msdTop5_median 0.0
wandb:                          pred_rmsd<1_out 0.0
wandb:                   pred_rmsd<1_out_median 0.0
wandb:                 pred_rmsd<1_out_msdTop10 0.0
wandb:          pred_rmsd<1_out_msdTop10_median 0.0
wandb:                  pred_rmsd<1_out_msdTop5 0.0
wandb:           pred_rmsd<1_out_msdTop5_median 0.0
wandb:                      pred_rmsd<1_out_std 0.0
wandb:                          pred_rmsd<1_std 0.0
wandb:                              pred_rmsd<2 0.0
wandb:                       pred_rmsd<2_median 0.0
wandb:                     pred_rmsd<2_msdTop10 0.0
wandb:              pred_rmsd<2_msdTop10_median 0.0
wandb:                      pred_rmsd<2_msdTop5 0.0
wandb:               pred_rmsd<2_msdTop5_median 0.0
wandb:                          pred_rmsd<2_out 0.0
wandb:                   pred_rmsd<2_out_median 0.0
wandb:                 pred_rmsd<2_out_msdTop10 0.0
wandb:          pred_rmsd<2_out_msdTop10_median 0.0
wandb:                  pred_rmsd<2_out_msdTop5 0.0
wandb:           pred_rmsd<2_out_msdTop5_median 0.0
wandb:                      pred_rmsd<2_out_std 0.0
wandb:                          pred_rmsd<2_std 0.0
wandb:                              pred_rmsd<5 0.3265
wandb:                       pred_rmsd<5_median 0.0
wandb:                     pred_rmsd<5_msdTop10 0.635
wandb:              pred_rmsd<5_msdTop10_median 1.0
wandb:                      pred_rmsd<5_msdTop5 0.555
wandb:               pred_rmsd<5_msdTop5_median 1.0
wandb:                          pred_rmsd<5_out 0.363
wandb:                   pred_rmsd<5_out_median 0.0
wandb:                 pred_rmsd<5_out_msdTop10 0.665
wandb:          pred_rmsd<5_out_msdTop10_median 1.0
wandb:                  pred_rmsd<5_out_msdTop5 0.585
wandb:           pred_rmsd<5_out_msdTop5_median 1.0
wandb:                      pred_rmsd<5_out_std 0.24204
wandb:                          pred_rmsd<5_std 0.24527
wandb:                         pred_rmsd_median 5.79916
wandb:                       pred_rmsd_msdTop10 4.8799
wandb:                pred_rmsd_msdTop10_median 4.35317
wandb:                        pred_rmsd_msdTop5 5.24933
wandb:                 pred_rmsd_msdTop5_median 4.69977
wandb:                            pred_rmsd_out 6.14415
wandb:                     pred_rmsd_out_median 5.59027
wandb:                   pred_rmsd_out_msdTop10 4.84669
wandb:            pred_rmsd_out_msdTop10_median 4.31201
wandb:                    pred_rmsd_out_msdTop5 5.17868
wandb:             pred_rmsd_out_msdTop5_median 4.60784
wandb:                        pred_rmsd_out_std 0.89441
wandb:                            pred_rmsd_std 0.97186
wandb:                               pred_sigma 7.53974
wandb:                      pred_sigma_msdTop10 7.53974
wandb:                       pred_sigma_msdTop5 7.53974
wandb:                           pred_sigma_std 0.0
wandb:                                   pred_t 0.49819
wandb:                          pred_t_msdTop10 0.4998
wandb:                           pred_t_msdTop5 0.49468
wandb:                               pred_t_std 0.27241
wandb:                         train_angle_loss 0.0
wandb:                           train_aux_loss 3.7114
wandb:                          train_batch_idx 99.5
wandb:                  train_general_step_time 0.09852
wandb:                           train_lig_size 32.905
wandb:                               train_loss 1.85572
wandb:                      train_lowT_aux_loss 7.7832
wandb:                          train_lowT_loss 3.86813
wandb:                      train_lowT_pos_loss 7.73626
wandb:                             train_lowT_t 0.15781
wandb:            train_metric_calculation_time 0.00412
wandb:                             train_norm_t 0.33631
wandb:                     train_num_designable 14.7
wandb:                           train_num_ligs 1.0
wandb:                            train_num_res 97.015
wandb:                           train_pos_loss 3.71144
wandb:                  train_radius_graph_time 0.01222
wandb:                          train_rec_sigma 7.4746
wandb:                              train_sigma 7.4746
wandb:                                  train_t 0.50289
wandb:                      trainer/global_step 1000
wandb:                           val_angle_loss 0.0
wandb:                             val_aux_loss 3.66089
wandb:                            val_batch_idx 99.5
wandb:                        val_centroid_rmsd 2.74972
wandb:                      val_centroid_rmsd<1 0.08
wandb:               val_centroid_rmsd<1_median 0.0
wandb:                  val_centroid_rmsd<1_out 0.085
wandb:           val_centroid_rmsd<1_out_median 0.0
wandb:                      val_centroid_rmsd<2 0.36
wandb:               val_centroid_rmsd<2_median 0.0
wandb:                  val_centroid_rmsd<2_out 0.38
wandb:           val_centroid_rmsd<2_out_median 0.0
wandb:                      val_centroid_rmsd<5 0.885
wandb:               val_centroid_rmsd<5_median 1.0
wandb:                  val_centroid_rmsd<5_out 0.905
wandb:           val_centroid_rmsd<5_out_median 1.0
wandb:                 val_centroid_rmsd_median 2.42188
wandb:                    val_centroid_rmsd_out 2.68432
wandb:             val_centroid_rmsd_out_median 2.3258
wandb:                    val_general_step_time 0.7827
wandb:                          val_kabsch_rmsd 4.42579
wandb:                        val_kabsch_rmsd<1 0.0
wandb:                 val_kabsch_rmsd<1_median 0.0
wandb:                    val_kabsch_rmsd<1_out 0.0
wandb:             val_kabsch_rmsd<1_out_median 0.0
wandb:                        val_kabsch_rmsd<2 0.02
wandb:                 val_kabsch_rmsd<2_median 0.0
wandb:                    val_kabsch_rmsd<2_out 0.02
wandb:             val_kabsch_rmsd<2_out_median 0.0
wandb:                        val_kabsch_rmsd<5 0.675
wandb:                 val_kabsch_rmsd<5_median 1.0
wandb:                    val_kabsch_rmsd<5_out 0.675
wandb:             val_kabsch_rmsd<5_out_median 1.0
wandb:                   val_kabsch_rmsd_median 4.03108
wandb:                      val_kabsch_rmsd_out 4.39241
wandb:               val_kabsch_rmsd_out_median 4.00559
wandb:                             val_lig_size 33.335
wandb:                                 val_loss 1.75911
wandb:                        val_lowT_aux_loss 7.45405
wandb:                            val_lowT_loss 3.63458
wandb:                        val_lowT_pos_loss 7.26916
wandb:                               val_lowT_t 0.15104
wandb:              val_metric_calculation_time 0.68675
wandb:                               val_norm_t 0.31699
wandb:                       val_num_designable 15.035
wandb:                             val_num_ligs 1.0
wandb:                              val_num_res 100.475
wandb:                             val_pos_loss 3.51821
wandb:                    val_radius_graph_time 0.01212
wandb:                            val_rec_sigma 7.53692
wandb:                                 val_rmsd 5.86526
wandb:                               val_rmsd<1 0.0
wandb:                        val_rmsd<1_median 0.0
wandb:                           val_rmsd<1_out 0.0
wandb:                    val_rmsd<1_out_median 0.0
wandb:                               val_rmsd<2 0.0
wandb:                        val_rmsd<2_median 0.0
wandb:                           val_rmsd<2_out 0.0
wandb:                    val_rmsd<2_out_median 0.0
wandb:                               val_rmsd<5 0.405
wandb:                        val_rmsd<5_median 0.0
wandb:                           val_rmsd<5_out 0.41
wandb:                    val_rmsd<5_out_median 0.0
wandb:                          val_rmsd_median 5.58257
wandb:                             val_rmsd_out 5.79077
wandb:                      val_rmsd_out_median 5.50589
wandb:                                val_sigma 7.53692
wandb:                                    val_t 0.48979
wandb: 
wandb: 🚀 View run train_HarmonicFlow_timesplit_DistPock_batch1_epochs5_worker1_20231208_211315 at: https://wandb.ai/hynsam137/pocket_gen/runs/nr6491gy
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20231208_211319-nr6491gy/logs
wandb: WARNING (User provided step: 1000 is less than current step: 1002. Dropping entry: {'trainer/global_step': 1000.0, 'epoch': 5.0, 'fake_lig_ratio': 0.0, 'pred_rmsd_msdTop10_median': 4.353166580200195, 'pred_rmsd_msdTop5_median': 4.699769973754883, 'pred_rmsd_median': 5.799156188964844, 'pred_rmsd<1_msdTop10_median': 0.0, 'pred_rmsd<1_msdTop5_median': 0.0, 'pred_rmsd<1_median': 0.0, 'pred_rmsd<2_msdTop10_median': 0.0, 'pred_rmsd<2_msdTop5_median': 0.0, 'pred_rmsd<2_median': 0.0, 'pred_rmsd<5_msdTop10_median': 1.0, 'pred_rmsd<5_msdTop5_median': 1.0, 'pred_rmsd<5_median': 0.0, 'pred_centroid_rmsd_msdTop10_median': 1.766343116760254, 'pred_centroid_rmsd_msdTop5_median': 2.0476648807525635, 'pred_centroid_rmsd_median': 2.729708433151245, 'pred_centroid_rmsd<1_msdTop10_median': 0.0, 'pred_centroid_rmsd<1_msdTop5_median': 0.0, 'pred_centroid_rmsd<1_median': 0.0, 'pred_centroid_rmsd<2_msdTop10_median': 1.0, 'pred_centroid_rmsd<2_msdTop5_median': 0.0, 'pred_centroid_rmsd<2_median': 0.0, 'pred_centroid_rmsd<5_msdTop10_median': 1.0, 'pred_centroid_rmsd<5_msdTop5_median': 1.0, 'pred_centroid_rmsd<5_median': 1.0, 'pred_kabsch_rmsd_msdTop10_median': 3.7424824877068597, 'pred_kabsch_rmsd_msdTop5_median': 3.958693139094327, 'pred_kabsch_rmsd_median': 4.243454301524845, 'pred_kabsch_rmsd<1_msdTop10_median': 0.0, 'pred_kabsch_rmsd<1_msdTop5_median': 0.0, 'pred_kabsch_rmsd<1_median': 0.0, 'pred_kabsch_rmsd<2_msdTop10_median': 0.0, 'pred_kabsch_rmsd<2_msdTop5_median': 0.0, 'pred_kabsch_rmsd<2_median': 0.0, 'pred_kabsch_rmsd<5_msdTop10_median': 1.0, 'pred_kabsch_rmsd<5_msdTop5_median': 1.0, 'pred_kabsch_rmsd<5_median': 1.0, 'pred_rmsd_out_msdTop10_median': 4.312012672424316, 'pred_rmsd_out_msdTop5_median': 4.607843399047852, 'pred_rmsd_out_median': 5.590273857116699, 'pred_rmsd<1_out_msdTop10_median': 0.0, 'pred_rmsd<1_out_msdTop5_median': 0.0, 'pred_rmsd<1_out_median': 0.0, 'pred_rmsd<2_out_msdTop10_median': 0.0, 'pred_rmsd<2_out_msdTop5_median': 0.0, 'pred_rmsd<2_out_median': 0.0, 'pred_rmsd<5_out_msdTop10_median': 1.0, 'pred_rmsd<5_out_msdTop5_median': 1.0, 'pred_rmsd<5_out_median': 0.0, 'pred_centroid_rmsd_out_msdTop10_median': 1.652723789215088, 'pred_centroid_rmsd_out_msdTop5_median': 1.9659209251403809, 'pred_centroid_rmsd_out_median': 2.6544110774993896, 'pred_centroid_rmsd<1_out_msdTop10_median': 0.0, 'pred_centroid_rmsd<1_out_msdTop5_median': 0.0, 'pred_centroid_rmsd<1_out_median': 0.0, 'pred_centroid_rmsd<2_out_msdTop10_median': 1.0, 'pred_centroid_rmsd<2_out_msdTop5_median': 1.0, 'pred_centroid_rmsd<2_out_median': 0.0, 'pred_centroid_rmsd<5_out_msdTop10_median': 1.0, 'pred_centroid_rmsd<5_out_msdTop5_median': 1.0, 'pred_centroid_rmsd<5_out_median': 1.0, 'pred_kabsch_rmsd_out_msdTop10_median': 3.8122318210390485, 'pred_kabsch_rmsd_out_msdTop5_median': 4.018672728920723, 'pred_kabsch_rmsd_out_median': 4.256944502200746, 'pred_kabsch_rmsd<1_out_msdTop10_median': 0.0, 'pred_kabsch_rmsd<1_out_msdTop5_median': 0.0, 'pred_kabsch_rmsd<1_out_median': 0.0, 'pred_kabsch_rmsd<2_out_msdTop10_median': 0.0, 'pred_kabsch_rmsd<2_out_msdTop5_median': 0.0, 'pred_kabsch_rmsd<2_out_median': 0.0, 'pred_kabsch_rmsd<5_out_msdTop10_median': 1.0, 'pred_kabsch_rmsd<5_out_msdTop5_median': 1.0, 'pred_kabsch_rmsd<5_out_median': 1.0, 'pred_lowT_pos_loss': 7.439335346221924, 'pred_lowT_aux_loss': 7.463720321655273, 'pred_lowT_loss': 3.719667673110962, 'pred_lowT_t': 0.15463310480117798, 'invalid_grads_per_epoch': 0.0, 'pred_num_res_msdTop10': 98.315, 'pred_num_res_msdTop5': 98.315, 'pred_num_res': 98.315, 'pred_num_res_std': 0.0, 'pred_batch_idx_msdTop10': 99.5, 'pred_batch_idx_msdTop5': 99.5, 'pred_batch_idx': 99.5, 'pred_batch_idx_std': 0.0, 'pred_num_ligs_msdTop10': 1.0, 'pred_num_ligs_msdTop5': 1.0, 'pred_num_ligs': 1.0, 'pred_num_ligs_std': 0.0, 'pred_num_designable_msdTop10': 15.155, 'pred_num_designable_msdTop5': 15.155, 'pred_num_designable': 15.155, 'pred_num_designable_std': 0.0, 'pred_lig_size_msdTop10': 36.265, 'pred_lig_size_msdTop5': 36.265, 'pred_lig_size': 36.265, 'pred_lig_size_std': 0.0, 'pred_rec_sigma_msdTop10': 7.539742946624756, 'pred_rec_sigma_msdTop5': 7.539742946624756, 'pred_rec_sigma': 7.539742946624756, 'pred_rec_sigma_std': 3.743171816950053e-07, 'pred_norm_t_msdTop10': 0.32804569602012634, 'pred_norm_t_msdTop5': 0.3279964327812195, 'pred_norm_t': 0.33280670642852783, 'pred_norm_t_std': 0.27901268005371094, 'pred_t_msdTop10': 0.4997960031032562, 'pred_t_msdTop5': 0.49467548727989197, 'pred_t': 0.49818748235702515, 'pred_t_std': 0.27241432666778564, 'pred_sigma_msdTop10': 7.539742946624756, 'pred_sigma_msdTop5': 7.539742946624756, 'pred_sigma': 7.539742946624756, 'pred_sigma_std': 3.743171816950053e-07, 'pred_aux_loss_msdTop10': 3.6052539348602295, 'pred_aux_loss_msdTop5': 3.7522547245025635, 'pred_aux_loss': 3.6461997032165527, 'pred_aux_loss_std': 3.082883358001709, 'pred_pos_loss_msdTop10': 3.6294798851013184, 'pred_pos_loss_msdTop5': 3.7597436904907227, 'pred_pos_loss': 3.6375527381896973, 'pred_pos_loss_std': 3.0909206867218018, 'pred_angle_loss_msdTop10': 0.0, 'pred_angle_loss_msdTop5': 0.0, 'pred_angle_loss': 0.0, 'pred_angle_loss_std': 0.0, 'pred_loss_msdTop10': 1.8147399425506592, 'pred_loss_msdTop5': 1.8798718452453613, 'pred_loss': 1.8187763690948486, 'pred_loss_std': 1.5454603433609009, 'pred_rmsd_msdTop10': 4.879901885986328, 'pred_rmsd_msdTop5': 5.249325752258301, 'pred_rmsd': 6.3290910720825195, 'pred_rmsd_std': 0.9718616008758545, 'pred_rmsd<1_msdTop10': 0.0, 'pred_rmsd<1_msdTop5': 0.0, 'pred_rmsd<1': 0.0, 'pred_rmsd<1_std': 0.0, 'pred_rmsd<2_msdTop10': 0.0, 'pred_rmsd<2_msdTop5': 0.0, 'pred_rmsd<2': 0.0, 'pred_rmsd<2_std': 0.0, 'pred_rmsd<5_msdTop10': 0.635, 'pred_rmsd<5_msdTop5': 0.555, 'pred_rmsd<5': 0.3265, 'pred_rmsd<5_std': 0.24527199104261158, 'pred_centroid_rmsd_msdTop10': 2.1577954292297363, 'pred_centroid_rmsd_msdTop5': 2.48661732673645, 'pred_centroid_rmsd': 3.147397994995117, 'pred_centroid_rmsd_std': 1.0459623336791992, 'pred_centroid_rmsd<1_msdTop10': 0.205, 'pred_centroid_rmsd<1_msdTop5': 0.155, 'pred_centroid_rmsd<1': 0.0815, 'pred_centroid_rmsd<1_std': 0.17002751960747406, 'pred_centroid_rmsd<2_msdTop10': 0.565, 'pred_centroid_rmsd<2_msdTop5': 0.48, 'pred_centroid_rmsd<2': 0.3075, 'pred_centroid_rmsd<2_std': 0.3263513110878374, 'pred_centroid_rmsd<5_msdTop10': 0.96, 'pred_centroid_rmsd<5_msdTop5': 0.93, 'pred_centroid_rmsd<5': 0.841, 'pred_centroid_rmsd<5_std': 0.15533882082591638, 'pred_kabsch_rmsd_msdTop10': 4.318125192938295, 'pred_kabsch_rmsd_msdTop5': 4.5338501925874946, 'pred_kabsch_rmsd': 4.780989251157908, 'pred_kabsch_rmsd_std': 0.5862263479610363, 'pred_kabsch_rmsd<1_msdTop10': 0.0, 'pred_kabsch_rmsd<1_msdTop5': 0.0, 'pred_kabsch_rmsd<1': 0.0, 'pred_kabsch_rmsd<1_std': 0.0, 'pred_kabsch_rmsd<2_msdTop10': 0.035, 'pred_kabsch_rmsd<2_msdTop5': 0.03, 'pred_kabsch_rmsd<2': 0.0155, 'pred_kabsch_rmsd<2_std': 0.02532335328521694, 'pred_kabsch_rmsd<5_msdTop10': 0.77, 'pred_kabsch_rmsd<5_msdTop5': 0.715, 'pred_kabsch_rmsd<5': 0.6615, 'pred_kabsch_rmsd<5_std': 0.14783214970226155, 'pred_rmsd_out_msdTop10': 4.8466901779174805, 'pred_rmsd_out_msdTop5': 5.178682804107666, 'pred_rmsd_out': 6.144149303436279, 'pred_rmsd_out_std': 0.8944100141525269, 'pred_rmsd<1_out_msdTop10': 0.0, 'pred_rmsd<1_out_msdTop5': 0.0, 'pred_rmsd<1_out': 0.0, 'pred_rmsd<1_out_std': 0.0, 'pred_rmsd<2_out_msdTop10': 0.0, 'pred_rmsd<2_out_msdTop5': 0.0, 'pred_rmsd<2_out': 0.0, 'pred_rmsd<2_out_std': 0.0, 'pred_rmsd<5_out_msdTop10': 0.665, 'pred_rmsd<5_out_msdTop5': 0.585, 'pred_rmsd<5_out': 0.363, 'pred_rmsd<5_out_std': 0.24203816294695688, 'pred_centroid_rmsd_out_msdTop10': 2.1237759590148926, 'pred_centroid_rmsd_out_msdTop5': 2.439936399459839, 'pred_centroid_rmsd_out': 3.0731589794158936, 'pred_centroid_rmsd_out_std': 1.0200177431106567, 'pred_centroid_rmsd<1_out_msdTop10': 0.205, 'pred_centroid_rmsd<1_out_msdTop5': 0.165, 'pred_centroid_rmsd<1_out': 0.0925, 'pred_centroid_rmsd<1_out_std': 0.1747244580641731, 'pred_centroid_rmsd<2_out_msdTop10': 0.59, 'pred_centroid_rmsd<2_out_msdTop5': 0.515, 'pred_centroid_rmsd<2_out': 0.3305, 'pred_centroid_rmsd<2_out_std': 0.3256356494407089, 'pred_centroid_rmsd<5_out_msdTop10': 0.96, 'pred_centroid_rmsd<5_out_msdTop5': 0.93, 'pred_centroid_rmsd<5_out': 0.848, 'pred_centroid_rmsd<5_out_std': 0.1466485534928721, 'pred_kabsch_rmsd_out_msdTop10': 4.385920817314968, 'pred_kabsch_rmsd_out_msdTop5': 4.579386350234038, 'pred_kabsch_rmsd_out': 4.800550853290423, 'pred_kabsch_rmsd_out_std': 0.5344834295111703, 'pred_kabsch_rmsd<1_out_msdTop10': 0.0, 'pred_kabsch_rmsd<1_out_msdTop5': 0.0, 'pred_kabsch_rmsd<1_out': 0.0, 'pred_kabsch_rmsd<1_out_std': 0.0, 'pred_kabsch_rmsd<2_out_msdTop10': 0.02, 'pred_kabsch_rmsd<2_out_msdTop5': 0.015, 'pred_kabsch_rmsd<2_out': 0.0085, 'pred_kabsch_rmsd<2_out_std': 0.01594948974278318, 'pred_kabsch_rmsd<5_out_msdTop10': 0.77, 'pred_kabsch_rmsd<5_out_msdTop5': 0.72, 'pred_kabsch_rmsd<5_out': 0.6695, 'pred_kabsch_rmsd<5_out_std': 0.13578858893965118, 'pred_radius_graph_time_msdTop10': 0.011609090566635132, 'pred_radius_graph_time_msdTop5': 0.011919891834259034, 'pred_radius_graph_time': 0.011908965826034545, 'pred_radius_graph_time_std': 0.0029497078330304226, 'pred_metric_calculation_time_msdTop10': 0.6252909052371979, 'pred_metric_calculation_time_msdTop5': 0.625749237537384, 'pred_metric_calculation_time': 0.6283355598449707, 'pred_metric_calculation_time_std': 0.04960478470178439, 'pred_general_step_time_msdTop10': 0.708347339630127, 'pred_general_step_time_msdTop5': 0.7095142316818237, 'pred_general_step_time': 0.7119604148864747, 'pred_general_step_time_std': 0.054428344316775075, '_timestamp': 1702090481.0044808}).
